#### Start game
   * Knows IP of server beforehand
# Since the ui tuplespace is one way and only providing data to usertask
# we abstract this.
# ui.(IP,ip) -> usertask.hostport(IP,String);
# ui.(NAME,name) -> usertask.name(NAME,String);
# ui.(ROOMNAME,roomName) -> usertask.roomname(ROOMNAME,String);
# ui.(ACTION,joinhost) -> usertask.action(ACTION,ServerFlag);

connect()@usertask	// if an exception is caught, go to start
if isConnected()@usertask then
    usertask.(CONNECTED,"") -> server.message(ServerFlag,String)
    server.(generateId()) -> usertask.id(int)
    openCreationHandler(id,space,repository)@server
    usertask.(action,roomName) -> creationHandler.message(ServerFlag,String)
    if message[0] == HOST@creationHandler then
        creationHandler.(GENERATEROOM,"") -> server.message(ServerFlag,String)
        server.(GENERATEDROOM,createRoomName()) -> creationHandler.message(GENERATEDROOM,String)
        createRoom(message[1])@creationHandler
        room.(roomName,ROOMOK) -> creationHandler.(message[1],ServerFlag)
        creationHandler.(SETROOM,roomName[1]) -> server.message(ServerFlag,String)
        setRoom()@server
        creationHandler.(OK,roomName[1]) -> usertask.response(ServerFlag,String)
    else
        creationHandler.(CHECKROOM,message[2]) -> server.message(ServerFlag,String)
        server.(message[1],checkRoom(data(message[1]))) -> creationHandler.serverResponse(message[2],boolean)
        if serverResponse[1]@creationHandler then
            creationHandler.(OK,message[2]) -> usertask.response(ServerFlag,String)
        else
            creationHandler.(KO,message[2]) -> usertask.response(ServerFlag,String)

    if response[1] == OK@usertask then
        connectToRoom(response[2])@usertask
        connected()@usertask
    else
        notConnected()@usertask
else
    notConnected()@usertask





(1) | connect()@UT;
(2) | if isConnected()@UT then
(3) |    UT.(CONNECTED,"") -> server.msg(ServerFlag,String);
(4) |    server.(id) -> UT.id(int);
(5) |    openCreationHandler(id,space,repository)@server;
(6) |    incrementId()@server;
(7) |    UT.(action,roomName) -> CH.msg(ServerFlag,String);
(8) |    if msg[0] == HOST@CH then
(9) |       CH.(GENERATEROOM,"") -> server.msg(ServerFlag,String);
(10)|       server.(GENERATEDROOM,createRoomName()) ->
                        CH.msg(GENERATEDROOM,String);
(11)|       createRoom(msg[1])@CH;
(12)|       room.(roomName,ROOMOK) -> CH.(msg[1],ServerFlag);
(13)|       CH.(SETROOM,msg[1]) -> server.msg(ServerFlag,String);
(14)|       setRoom(msg[1])@server;
(15)|       CH.(true,roomName[1]) -> UT.response(boolean,String);
(8) |
(16)|    CH.(CHECKROOM,msg[1]) -> server.msg(ServerFlag,String);
(17)|    server.(msg[1],checkRoom(msg[1]) ->
                        CH.serverResponse(msg[1],boolean);
(18)|    CH.(serverResponse[1],serverResponse[0]) -> UT.response(boolean,String)
(19)|    if response[0]@UT then
(20)|       connectToRoom(response[1])@UT;
(21)|       connected()@UT;
(19)|    else
(22)|       notConnected()@UT;
(2) | else
(23)|    notConnected()@UT;

